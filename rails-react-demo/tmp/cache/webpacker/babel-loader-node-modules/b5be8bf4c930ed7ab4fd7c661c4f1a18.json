{"ast":null,"code":"var _jsxFileName = \"/Users/nicklonz/GA_clones/rails-react-example/app/javascript/packs/components/TodoApp.jsx\";\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport axios from 'axios';\nimport TodoItems from './TodoItems';\nimport TodoItem from './TodoItem';\nimport TodoForm from './TodoForm';\nimport Spinner from './Spinner';\nimport ErrorMessage from './ErrorMessage';\n\nvar TodoApp =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TodoApp, _React$Component);\n\n  function TodoApp(props) {\n    var _this;\n\n    _classCallCheck(this, TodoApp);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TodoApp).call(this, props));\n    _this.state = {\n      todoItems: [],\n      hideCompletedTodoItems: false,\n      isLoading: true,\n      errorMessage: null\n    };\n    _this.getTodoItems = _this.getTodoItems.bind(_assertThisInitialized(_this));\n    _this.createTodoItem = _this.createTodoItem.bind(_assertThisInitialized(_this));\n    _this.toggleCompletedTodoItems = _this.toggleCompletedTodoItems.bind(_assertThisInitialized(_this));\n    _this.handleErrors = _this.handleErrors.bind(_assertThisInitialized(_this));\n    _this.clearErrors = _this.clearErrors.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(TodoApp, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getTodoItems();\n    }\n  }, {\n    key: \"getTodoItems\",\n    value: function getTodoItems() {\n      var _this2 = this;\n\n      axios.get('/api/v1/todo_items').then(function (response) {\n        _this2.clearErrors();\n\n        _this2.setState({\n          isLoading: true\n        });\n\n        var todoItems = response.data;\n\n        _this2.setState({\n          todoItems: todoItems\n        });\n\n        _this2.setState({\n          isLoading: false\n        });\n      })[\"catch\"](function (error) {\n        _this2.setState({\n          isLoading: true\n        });\n\n        _this2.setState({\n          errorMessage: {\n            message: 'There was an error loading your todo items...'\n          }\n        });\n      });\n    }\n  }, {\n    key: \"createTodoItem\",\n    value: function createTodoItem(todoItem) {\n      var todoItems = [todoItem].concat(_toConsumableArray(this.state.todoItems));\n      this.setState({\n        todoItems: todoItems\n      });\n    }\n  }, {\n    key: \"toggleCompletedTodoItems\",\n    value: function toggleCompletedTodoItems() {\n      this.setState({\n        hideCompletedTodoItems: !this.state.hideCompletedTodoItems\n      });\n    }\n  }, {\n    key: \"handleErrors\",\n    value: function handleErrors(errorMessage) {\n      this.setState({\n        errorMessage: errorMessage\n      });\n    }\n  }, {\n    key: \"clearErrors\",\n    value: function clearErrors() {\n      this.setState({\n        errorMessage: null\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(React.Fragment, null, this.state.errorMessage && React.createElement(ErrorMessage, {\n        errorMessage: this.state.errorMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), !this.state.isLoading && React.createElement(React.Fragment, null, React.createElement(TodoForm, {\n        createTodoItem: this.createTodoItem,\n        handleErrors: this.handleErrors,\n        clearErrors: this.clearErrors,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }), React.createElement(TodoItems, {\n        toggleCompletedTodoItems: this.toggleCompletedTodoItems,\n        hideCompletedTodoItems: this.state.hideCompletedTodoItems,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, this.state.todoItems.map(function (todoItem) {\n        return React.createElement(TodoItem, {\n          key: todoItem.id,\n          todoItem: todoItem,\n          getTodoItems: _this3.getTodoItems,\n          hideCompletedTodoItems: _this3.state.hideCompletedTodoItems,\n          handleErrors: _this3.handleErrors,\n          clearErrors: _this3.clearErrors,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        });\n      }))), this.state.isLoading && React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return TodoApp;\n}(React.Component);\n\ndocument.addEventListener('turbolinks:load', function () {\n  var app = document.getElementById('todo-app');\n  app && ReactDOM.render(React.createElement(TodoApp, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }), app);\n});","map":{"version":3,"sources":["/Users/nicklonz/GA_clones/rails-react-example/app/javascript/packs/components/TodoApp.jsx"],"names":["React","ReactDOM","axios","TodoItems","TodoItem","TodoForm","Spinner","ErrorMessage","TodoApp","props","state","todoItems","hideCompletedTodoItems","isLoading","errorMessage","getTodoItems","bind","createTodoItem","toggleCompletedTodoItems","handleErrors","clearErrors","get","then","response","setState","data","error","message","todoItem","map","id","Component","document","addEventListener","app","getElementById","render"],"mappings":"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","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport axios from 'axios'\n\nimport TodoItems from './TodoItems'\nimport TodoItem from './TodoItem'\nimport TodoForm from './TodoForm'\nimport Spinner from './Spinner'\nimport ErrorMessage from './ErrorMessage'\nclass TodoApp extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            todoItems: [],\n            hideCompletedTodoItems: false,\n            isLoading: true,\n            errorMessage: null,\n        }\n        this.getTodoItems = this.getTodoItems.bind(this)\n        this.createTodoItem = this.createTodoItem.bind(this)\n        this.toggleCompletedTodoItems = this.toggleCompletedTodoItems.bind(this)\n        this.handleErrors = this.handleErrors.bind(this)\n        this.clearErrors = this.clearErrors.bind(this)\n    }\n    componentDidMount() {\n        this.getTodoItems()\n    }\n    getTodoItems() {\n        axios\n            .get('/api/v1/todo_items')\n            .then(response => {\n                this.clearErrors()\n                this.setState({ isLoading: true })\n                const todoItems = response.data\n                this.setState({ todoItems })\n                this.setState({ isLoading: false })\n            })\n            .catch(error => {\n                this.setState({ isLoading: true })\n                this.setState({\n                    errorMessage: {\n                        message:\n                            'There was an error loading your todo items...',\n                    },\n                })\n            })\n    }\n    createTodoItem(todoItem) {\n        const todoItems = [todoItem, ...this.state.todoItems]\n        this.setState({ todoItems })\n    }\n    toggleCompletedTodoItems() {\n        this.setState({\n            hideCompletedTodoItems: !this.state.hideCompletedTodoItems,\n        })\n    }\n    handleErrors(errorMessage) {\n        this.setState({ errorMessage })\n    }\n    clearErrors() {\n        this.setState({\n            errorMessage: null,\n        })\n    }\n    render() {\n        return (\n            <>\n                {this.state.errorMessage && (\n                    <ErrorMessage errorMessage={this.state.errorMessage} />\n                )}\n                {!this.state.isLoading && (\n                    <>\n                        <TodoForm\n                            createTodoItem={this.createTodoItem}\n                            handleErrors={this.handleErrors}\n                            clearErrors={this.clearErrors}\n                        />\n                        <TodoItems\n                            toggleCompletedTodoItems={\n                                this.toggleCompletedTodoItems\n                            }\n                            hideCompletedTodoItems={\n                                this.state.hideCompletedTodoItems\n                            }\n                        >\n                            {this.state.todoItems.map(todoItem => (\n                                <TodoItem\n                                    key={todoItem.id}\n                                    todoItem={todoItem}\n                                    getTodoItems={this.getTodoItems}\n                                    hideCompletedTodoItems={\n                                        this.state.hideCompletedTodoItems\n                                    }\n                                    handleErrors={this.handleErrors}\n                                    clearErrors={this.clearErrors}\n                                />\n                            ))}\n                        </TodoItems>\n                    </>\n                )}\n                {this.state.isLoading && <Spinner />}\n            </>\n        )\n    }\n}\n\ndocument.addEventListener('turbolinks:load', () => {\n    const app = document.getElementById('todo-app')\n    app && ReactDOM.render(<TodoApp />, app)\n})\n"]},"metadata":{},"sourceType":"module"}