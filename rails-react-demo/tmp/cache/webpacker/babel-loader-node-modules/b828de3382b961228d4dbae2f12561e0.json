{"ast":null,"code":"var _jsxFileName = \"/Users/nicklonz/GA_clones/rails-react-example/app/javascript/packs/components/TodoItem.jsx\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport axios from 'axios';\nimport setAxiosHeaders from './AxiosHeaders';\n\nvar TodoItem =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TodoItem, _React$Component);\n\n  function TodoItem(props) {\n    var _this;\n\n    _classCallCheck(this, TodoItem);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TodoItem).call(this, props));\n    _this.updateTodoItem = _.debounce(function () {\n      setAxiosHeaders();\n      axios.put(_this.path, {\n        todo_item: {\n          title: _this.inputRef.current.value,\n          complete: _this.completedRef.current.checked\n        }\n      }).then(function () {\n        _this.props.clearErrors();\n      })[\"catch\"](function (error) {\n        _this.props.handleErrors(error);\n      });\n    }, 1000);\n    _this.state = {\n      complete: _this.props.todoItem.complete\n    };\n    _this.handleDestroy = _this.handleDestroy.bind(_assertThisInitialized(_this));\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    _this.updateTodoItem = _this.updateTodoItem.bind(_assertThisInitialized(_this));\n    _this.inputRef = React.createRef();\n    _this.completedRef = React.createRef();\n    _this.path = \"/api/v1/todo_items/\".concat(_this.props.todoItem.id);\n    return _this;\n  }\n\n  _createClass(TodoItem, [{\n    key: \"handleChange\",\n    value: function handleChange() {\n      this.setState({\n        complete: this.completedRef.current.checked\n      });\n      this.updateTodoItem();\n    }\n  }, {\n    key: \"handleDestroy\",\n    value: function handleDestroy() {\n      var _this2 = this;\n\n      setAxiosHeaders();\n      var confirmation = confirm('Are you sure?');\n\n      if (confirmation) {\n        axios[\"delete\"](this.path).then(function (response) {\n          _this2.props.getTodoItems();\n        })[\"catch\"](function (error) {\n          console.log(error);\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _React$createElement;\n\n      var todoItem = this.props.todoItem;\n      return React.createElement(\"tr\", {\n        className: \"\".concat(this.state.complete && this.props.hideCompletedTodoItems ? \"d-none\" : '', \" \").concat(this.state.complete ? 'table-light' : ''),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"svg\", {\n        className: \"bi bi-check-circle \".concat(this.state.complete ? \"text-success\" : \"text-muted\"),\n        width: \"2em\",\n        height: \"2em\",\n        viewBox: \"0 0 20 20\",\n        fill: \"currentColor\",\n        xmlns: \"http://www.w3.org/2000/svg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"path\", {\n        fillRule: \"evenodd\",\n        d: \"M17.354 4.646a.5.5 0 010 .708l-7 7a.5.5 0 01-.708 0l-3-3a.5.5 0 11.708-.708L10 11.293l6.646-6.647a.5.5 0 01.708 0z\",\n        clipRule: \"evenodd\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }), React.createElement(\"path\", {\n        fillRule: \"evenodd\",\n        d: \"M10 4.5a5.5 5.5 0 105.5 5.5.5.5 0 011 0 6.5 6.5 0 11-3.25-5.63.5.5 0 11-.5.865A5.472 5.472 0 0010 4.5z\",\n        clipRule: \"evenodd\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }))), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        defaultValue: todoItem.title,\n        disabled: this.state.complete,\n        onChange: this.handleChange,\n        ref: this.inputRef,\n        className: \"form-control\",\n        id: \"todoItem__title-\".concat(todoItem.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        className: \"text-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-check form-check-inline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"input\", (_React$createElement = {\n        type: \"boolean\",\n        defaultChecked: this.state.complete\n      }, _defineProperty(_React$createElement, \"type\", \"checkbox\"), _defineProperty(_React$createElement, \"onChange\", this.handleChange), _defineProperty(_React$createElement, \"ref\", this.completedRef), _defineProperty(_React$createElement, \"className\", \"form-check-input\"), _defineProperty(_React$createElement, \"id\", \"complete-\".concat(todoItem.id)), _defineProperty(_React$createElement, \"__source\", {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      }), _defineProperty(_React$createElement, \"__self\", this), _React$createElement)), React.createElement(\"label\", {\n        className: \"form-check-label\",\n        htmlFor: \"complete-\".concat(todoItem.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"Complete?\")), React.createElement(\"button\", {\n        onClick: this.handleDestroy,\n        className: \"btn btn-outline-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"Delete\")));\n    }\n  }]);\n\n  return TodoItem;\n}(React.Component);\n\nexport default TodoItem;\nTodoItem.propTypes = {\n  todoItem: PropTypes.object.isRequired,\n  getTodoItems: PropTypes.func.isRequired,\n  hideCompletedTodoItems: PropTypes.bool.isRequired,\n  clearErrors: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["/Users/nicklonz/GA_clones/rails-react-example/app/javascript/packs/components/TodoItem.jsx"],"names":["React","PropTypes","_","axios","setAxiosHeaders","TodoItem","props","updateTodoItem","debounce","put","path","todo_item","title","inputRef","current","value","complete","completedRef","checked","then","clearErrors","error","handleErrors","state","todoItem","handleDestroy","bind","handleChange","createRef","id","setState","confirmation","confirm","response","getTodoItems","console","log","hideCompletedTodoItems","Component","propTypes","object","isRequired","func","bool"],"mappings":"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","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport _ from 'lodash'\nimport axios from 'axios'\nimport setAxiosHeaders from './AxiosHeaders'\nclass TodoItem extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            complete: this.props.todoItem.complete,\n        }\n        this.handleDestroy = this.handleDestroy.bind(this)\n        this.handleChange = this.handleChange.bind(this)\n        this.updateTodoItem = this.updateTodoItem.bind(this)\n        this.inputRef = React.createRef()\n        this.completedRef = React.createRef()\n        this.path = `/api/v1/todo_items/${this.props.todoItem.id}`\n    }\n    handleChange() {\n        this.setState({\n            complete: this.completedRef.current.checked,\n        })\n        this.updateTodoItem()\n    }\n    updateTodoItem = _.debounce(() => {\n        setAxiosHeaders()\n        axios\n            .put(this.path, {\n                todo_item: {\n                    title: this.inputRef.current.value,\n                    complete: this.completedRef.current.checked,\n                },\n            })\n            .then(() => {\n                this.props.clearErrors()\n            })\n            .catch(error => {\n                this.props.handleErrors(error)\n            })\n    }, 1000)\n    handleDestroy() {\n        setAxiosHeaders()\n        const confirmation = confirm('Are you sure?')\n        if (confirmation) {\n            axios\n                .delete(this.path)\n                .then(response => {\n                    this.props.getTodoItems()\n                })\n                .catch(error => {\n                    console.log(error)\n                })\n        }\n    }\n    render() {\n        const { todoItem } = this.props\n        return (\n            <tr\n                className={`${\n                    this.state.complete && this.props.hideCompletedTodoItems\n                        ? `d-none`\n                        : ''\n                } ${this.state.complete ? 'table-light' : ''}`}\n            >\n                <td>\n                    <svg\n                        className={`bi bi-check-circle ${\n                            this.state.complete ? `text-success` : `text-muted`\n                        }`}\n                        width=\"2em\"\n                        height=\"2em\"\n                        viewBox=\"0 0 20 20\"\n                        fill=\"currentColor\"\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                    >\n                        <path\n                            fillRule=\"evenodd\"\n                            d=\"M17.354 4.646a.5.5 0 010 .708l-7 7a.5.5 0 01-.708 0l-3-3a.5.5 0 11.708-.708L10 11.293l6.646-6.647a.5.5 0 01.708 0z\"\n                            clipRule=\"evenodd\"\n                        ></path>\n                        <path\n                            fillRule=\"evenodd\"\n                            d=\"M10 4.5a5.5 5.5 0 105.5 5.5.5.5 0 011 0 6.5 6.5 0 11-3.25-5.63.5.5 0 11-.5.865A5.472 5.472 0 0010 4.5z\"\n                            clipRule=\"evenodd\"\n                        ></path>\n                    </svg>\n                </td>\n                <td>\n                    <input\n                        type=\"text\"\n                        defaultValue={todoItem.title}\n                        disabled={this.state.complete}\n                        onChange={this.handleChange}\n                        ref={this.inputRef}\n                        className=\"form-control\"\n                        id={`todoItem__title-${todoItem.id}`}\n                    />\n                </td>\n                <td className=\"text-right\">\n                    <div className=\"form-check form-check-inline\">\n                        <input\n                            type=\"boolean\"\n                            defaultChecked={this.state.complete}\n                            type=\"checkbox\"\n                            onChange={this.handleChange}\n                            ref={this.completedRef}\n                            className=\"form-check-input\"\n                            id={`complete-${todoItem.id}`}\n                        />\n                        <label\n                            className=\"form-check-label\"\n                            htmlFor={`complete-${todoItem.id}`}\n                        >\n                            Complete?\n                        </label>\n                    </div>\n                    <button\n                        onClick={this.handleDestroy}\n                        className=\"btn btn-outline-danger\"\n                    >\n                        Delete\n                    </button>\n                </td>\n            </tr>\n        )\n    }\n}\n\nexport default TodoItem\n\nTodoItem.propTypes = {\n    todoItem: PropTypes.object.isRequired,\n    getTodoItems: PropTypes.func.isRequired,\n    hideCompletedTodoItems: PropTypes.bool.isRequired,\n    clearErrors: PropTypes.func.isRequired,\n}\n"]},"metadata":{},"sourceType":"module"}