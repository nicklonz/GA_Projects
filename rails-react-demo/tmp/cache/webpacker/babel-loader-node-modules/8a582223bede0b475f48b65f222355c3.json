{"ast":null,"code":"var _jsxFileName = \"/Users/nicklonz/GA_clones/rails-react-example/app/javascript/packs/components/TodoForm.jsx\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport setAxiosHeaders from './AxiosHeaders';\n\nvar TodoForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TodoForm, _React$Component);\n\n  function TodoForm(props) {\n    var _this;\n\n    _classCallCheck(this, TodoForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TodoForm).call(this, props));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    _this.titleRef = React.createRef();\n    return _this;\n  }\n\n  _createClass(TodoForm, [{\n    key: \"handleSubmit\",\n    value: function handleSubmit(e) {\n      var _this2 = this;\n\n      e.preventDefault();\n      setAxiosHeaders();\n      axios.post('/api/v1/todo_items', {\n        todo_item: {\n          title: this.titleRef.current.value,\n          complete: false\n        }\n      }).then(function (response) {\n        var todoItem = response.data;\n\n        _this2.props.createTodoItem(todoItem);\n\n        _this2.props.clearErrors();\n      })[\"catch\"](function (error) {\n        _this2.props.handleErrors(error);\n      });\n      e.target.reset();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        className: \"my-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group col-md-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"title\",\n        ref: this.titleRef,\n        required: true,\n        className: \"form-control\",\n        id: \"title\",\n        placeholder: \"Write your todo item here...\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-outline-success btn-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Add To Do Item\"))));\n    }\n  }]);\n\n  return TodoForm;\n}(React.Component);\n\nexport default TodoForm;\nTodoForm.propTypes = {\n  createTodoItem: PropTypes.func.isRequired,\n  handleErrors: PropTypes.func.isRequired,\n  clearErrors: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["/Users/nicklonz/GA_clones/rails-react-example/app/javascript/packs/components/TodoForm.jsx"],"names":["React","PropTypes","axios","setAxiosHeaders","TodoForm","props","handleSubmit","bind","titleRef","createRef","e","preventDefault","post","todo_item","title","current","value","complete","then","response","todoItem","data","createTodoItem","clearErrors","error","handleErrors","target","reset","Component","propTypes","func","isRequired"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,gBAA5B;;IACMC,Q;;;;;AACF,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,kFAAMA,KAAN;AACA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,+BAApB;AACA,UAAKC,QAAL,GAAgBR,KAAK,CAACS,SAAN,EAAhB;AAHe;AAIlB;;;;iCAEYC,C,EAAG;AAAA;;AACZA,MAAAA,CAAC,CAACC,cAAF;AACAR,MAAAA,eAAe;AACfD,MAAAA,KAAK,CACAU,IADL,CACU,oBADV,EACgC;AACxBC,QAAAA,SAAS,EAAE;AACPC,UAAAA,KAAK,EAAE,KAAKN,QAAL,CAAcO,OAAd,CAAsBC,KADtB;AAEPC,UAAAA,QAAQ,EAAE;AAFH;AADa,OADhC,EAOKC,IAPL,CAOU,UAAAC,QAAQ,EAAI;AACd,YAAMC,QAAQ,GAAGD,QAAQ,CAACE,IAA1B;;AACA,QAAA,MAAI,CAAChB,KAAL,CAAWiB,cAAX,CAA0BF,QAA1B;;AACA,QAAA,MAAI,CAACf,KAAL,CAAWkB,WAAX;AACH,OAXL,WAYW,UAAAC,KAAK,EAAI;AACZ,QAAA,MAAI,CAACnB,KAAL,CAAWoB,YAAX,CAAwBD,KAAxB;AACH,OAdL;AAeAd,MAAAA,CAAC,CAACgB,MAAF,CAASC,KAAT;AACH;;;6BAEQ;AACL,aACI;AAAM,QAAA,QAAQ,EAAE,KAAKrB,YAArB;AAAmC,QAAA,SAAS,EAAC,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,IAAI,EAAC,OAFT;AAGI,QAAA,GAAG,EAAE,KAAKE,QAHd;AAII,QAAA,QAAQ,MAJZ;AAKI,QAAA,SAAS,EAAC,cALd;AAMI,QAAA,EAAE,EAAC,OANP;AAOI,QAAA,WAAW,EAAC,8BAPhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,EAYI;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,SAAS,EAAC,mCAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,CAZJ,CADJ,CADJ;AAsBH;;;;EAnDkBR,KAAK,CAAC4B,S;;AAsD7B,eAAexB,QAAf;AAEAA,QAAQ,CAACyB,SAAT,GAAqB;AACjBP,EAAAA,cAAc,EAAErB,SAAS,CAAC6B,IAAV,CAAeC,UADd;AAEjBN,EAAAA,YAAY,EAAExB,SAAS,CAAC6B,IAAV,CAAeC,UAFZ;AAGjBR,EAAAA,WAAW,EAAEtB,SAAS,CAAC6B,IAAV,CAAeC;AAHX,CAArB","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport axios from 'axios'\nimport setAxiosHeaders from './AxiosHeaders'\nclass TodoForm extends React.Component {\n    constructor(props) {\n        super(props)\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.titleRef = React.createRef()\n    }\n\n    handleSubmit(e) {\n        e.preventDefault()\n        setAxiosHeaders()\n        axios\n            .post('/api/v1/todo_items', {\n                todo_item: {\n                    title: this.titleRef.current.value,\n                    complete: false,\n                },\n            })\n            .then(response => {\n                const todoItem = response.data\n                this.props.createTodoItem(todoItem)\n                this.props.clearErrors()\n            })\n            .catch(error => {\n                this.props.handleErrors(error)\n            })\n        e.target.reset()\n    }\n\n    render() {\n        return (\n            <form onSubmit={this.handleSubmit} className=\"my-3\">\n                <div className=\"form-row\">\n                    <div className=\"form-group col-md-8\">\n                        <input\n                            type=\"text\"\n                            name=\"title\"\n                            ref={this.titleRef}\n                            required\n                            className=\"form-control\"\n                            id=\"title\"\n                            placeholder=\"Write your todo item here...\"\n                        />\n                    </div>\n                    <div className=\"form-group col-md-4\">\n                        <button className=\"btn btn-outline-success btn-block\">\n                            Add To Do Item\n                        </button>\n                    </div>\n                </div>\n            </form>\n        )\n    }\n}\n\nexport default TodoForm\n\nTodoForm.propTypes = {\n    createTodoItem: PropTypes.func.isRequired,\n    handleErrors: PropTypes.func.isRequired,\n    clearErrors: PropTypes.func.isRequired,\n}\n"]},"metadata":{},"sourceType":"module"}