{"ast":null,"code":"var _jsxFileName = \"/Users/nicklonz/GA_Projects/minticle-final-project/src/Components/DisplayAllPosts.jsx\";\nimport React, { useState, useRef } from \"react\";\nimport CreateNewPost from \"./CreateNewPost\";\nimport Post from \"./Post\";\nimport ModifyPost from \"./ModifyPost\";\n\nconst DisplayAllPosts = () => {\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [allPosts, setAllPosts] = useState([]);\n  const [isCreateNewPost, setIsCreateNewPost] = useState(false);\n  const [isModifyPost, setIsModifyPost] = useState(false);\n  const [editPostId, setEditPostId] = useState(\"\"); // Initialize useRef\n\n  const getTitle = useRef();\n  const getContent = useRef();\n\n  const savePostTitleToState = event => {\n    setTitle(event.target.value);\n  };\n\n  const savePostContentToState = event => {\n    setContent(event.target.value);\n  };\n\n  const toggleCreateNewPost = () => {\n    setIsCreateNewPost(!isCreateNewPost);\n  };\n\n  const toggleModifyPostComponent = () => {\n    setIsModifyPost(!isModifyPost);\n  };\n\n  const editPost = id => {\n    setEditPostId(id);\n    console.log(id);\n    toggleModifyPostComponent();\n  };\n\n  const deletePost = id => {\n    const modifiedPost = allPosts.filter(eachPost => {\n      return eachPost.id !== id;\n    });\n    setAllPosts(modifiedPost);\n  };\n\n  const updatePost = event => {\n    event.preventDefault();\n    const updatedPost = allPosts.map(eachPost => {\n      if (eachPost.id === editPostId) {\n        console.log([eachPost.id, editPostId]);\n        return { ...eachPost,\n          title: title || eachPost.title,\n          content: content || eachPost.content\n        };\n      }\n\n      console.log(eachPost);\n      return eachPost;\n    });\n    setAllPosts(updatedPost);\n    toggleModifyPostComponent();\n  };\n\n  const savePost = event => {\n    event.preventDefault();\n    const id = Date.now();\n    setAllPosts([...allPosts, {\n      title,\n      content,\n      id\n    }]);\n    console.log(allPosts);\n    setTitle(\"\");\n    setContent(\"\");\n    getTitle.current.value = \"\";\n    getContent.current.value = \"\";\n    toggleCreateNewPost();\n  };\n\n  if (isCreateNewPost) {\n    return React.createElement(React.Fragment, null, React.createElement(CreateNewPost, {\n      savePostTitleToState: savePostTitleToState,\n      savePostContentToState: savePostContentToState,\n      getTitle: getTitle,\n      getContent: getContent,\n      savePost: savePost,\n      deletePost: deletePost,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }));\n  } else if (isModifyPost) {\n    const post = allPosts.find(post => {\n      return post.id === editPostId;\n    });\n    return React.createElement(ModifyPost, {\n      title: post.title,\n      content: post.content,\n      updatePost: updatePost,\n      savePostTitleToState: savePostTitleToState,\n      savePostContentToState: savePostContentToState,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(React.Fragment, null, !allPosts.length ? React.createElement(\"section\", {\n    className: \"no-post\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: \"./public/logo.png\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"Welcome to MinTicle\"), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"There is nothing to see here yet.\"), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"There are 86,400 seconds in a day.\", React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"Make them count. \")), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }), React.createElement(\"section\", {\n    className: \"button-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: toggleCreateNewPost,\n    className: \"button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"Create New\"))) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, \"All Posts\"), React.createElement(\"section\", {\n    className: \"all-post\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, allPosts.map(eachPost => {\n    return React.createElement(Post, {\n      id: eachPost.id,\n      key: eachPost.id,\n      title: eachPost.title,\n      content: eachPost.content,\n      editPost: editPost,\n      deletePost: deletePost,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    });\n  }), React.createElement(\"section\", {\n    className: \"button-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: toggleCreateNewPost,\n    className: \"button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, \"Create Something\")))));\n};\n\nexport default DisplayAllPosts;","map":{"version":3,"sources":["/Users/nicklonz/GA_Projects/minticle-final-project/src/Components/DisplayAllPosts.jsx"],"names":["React","useState","useRef","CreateNewPost","Post","ModifyPost","DisplayAllPosts","title","setTitle","content","setContent","allPosts","setAllPosts","isCreateNewPost","setIsCreateNewPost","isModifyPost","setIsModifyPost","editPostId","setEditPostId","getTitle","getContent","savePostTitleToState","event","target","value","savePostContentToState","toggleCreateNewPost","toggleModifyPostComponent","editPost","id","console","log","deletePost","modifiedPost","filter","eachPost","updatePost","preventDefault","updatedPost","map","savePost","Date","now","current","post","find","length"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport CreateNewPost from \"./CreateNewPost\";\nimport Post from \"./Post\";\nimport ModifyPost from \"./ModifyPost\";\n\nconst DisplayAllPosts = () => {\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [allPosts, setAllPosts] = useState([]);\n  const [isCreateNewPost, setIsCreateNewPost] = useState(false);\n  const [isModifyPost, setIsModifyPost] = useState(false);\n  const [editPostId, setEditPostId] = useState(\"\");\n\n  // Initialize useRef\n  const getTitle = useRef();\n  const getContent = useRef();\n\n  const savePostTitleToState = event => {\n    setTitle(event.target.value);\n  };\n  const savePostContentToState = event => {\n    setContent(event.target.value);\n  };\n  const toggleCreateNewPost = () => {\n    setIsCreateNewPost(!isCreateNewPost);\n  };\n  const toggleModifyPostComponent = () => {\n    setIsModifyPost(!isModifyPost)\n  }\n  const editPost = id => {\n    setEditPostId(id);\n    console.log(id)\n    toggleModifyPostComponent();\n  };\n  const deletePost = id => {\n    const modifiedPost = allPosts.filter(eachPost => {\n      return eachPost.id !== id;\n    });\n    setAllPosts(modifiedPost);\n  };\n  const updatePost = (event) => {\n    event.preventDefault();\n    const updatedPost = allPosts.map(eachPost => {\n      if (eachPost.id === editPostId) {\n        console.log([eachPost.id, editPostId] )\n        return {\n          ...eachPost,\n          title: title || eachPost.title,\n          content: content || eachPost.content\n        };\n      }\n      console.log(eachPost)\n      return eachPost;\n    });\n    setAllPosts(updatedPost);\n    toggleModifyPostComponent();\n  };\n  const savePost = event => {\n    event.preventDefault();\n    const id = Date.now();\n    setAllPosts([...allPosts, { title, content, id }]);\n    console.log(allPosts);\n    setTitle(\"\");\n    setContent(\"\");\n    getTitle.current.value = \"\";\n    getContent.current.value = \"\";\n    toggleCreateNewPost();\n  };\n  if (isCreateNewPost) {\n    return (\n      <>\n        <CreateNewPost\n          savePostTitleToState={savePostTitleToState}\n          savePostContentToState={savePostContentToState}\n          getTitle={getTitle}\n          getContent={getContent}\n          savePost={savePost}\n          deletePost={deletePost}\n        />\n      </>\n    );\n  }\n  else if (isModifyPost) {\n    const post = allPosts.find(post => {\n      return post.id === editPostId;\n    });\n    return (\n      <ModifyPost\n        title={post.title}\n        content={post.content}\n        updatePost={updatePost}\n        savePostTitleToState={savePostTitleToState}\n        savePostContentToState={savePostContentToState}\n      />\n    );\n  }\n  return (\n    <>\n      {!allPosts.length ? (\n        <section className=\"no-post\">\n\n          <img src={\"./public/logo.png\"}/>\n\n          <h1>Welcome to MinTicle</h1>\n          <h3>There is nothing to see here yet.</h3>\n          <h3>There are 86,400 seconds in a day.\n          <h3>Make them count. </h3>\n          </h3>\n\n          <br />\n      <br />\n          <section className=\"button-wrapper\">\n      <button onClick={toggleCreateNewPost} className=\"button\">Create New</button>\n      </section>\n        </section>\n      ) : (\n      <div><h1>All Posts</h1>\n        <section className=\"all-post\">\n        {allPosts.map(eachPost => {\n          return (\n            <Post\n              id={eachPost.id}\n              key={eachPost.id}\n              title={eachPost.title}\n              content={eachPost.content}\n              editPost={editPost}\n              deletePost={deletePost}\n            />\n          );\n        })}\n      <section className=\"button-wrapper\">\n      <button onClick={toggleCreateNewPost} className=\"button\">Create Something</button>\n      </section>\n        </section>\n        \n        </div>\n      )}\n\n      \n    </>\n  );\n};\nexport default DisplayAllPosts;"]},"metadata":{},"sourceType":"module"}